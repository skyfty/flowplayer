/* * Author: Thomas Dubois, <thomas _at_ flowplayer org> * This file is part of Flowplayer, http://flowplayer.org * * Copyright (c) 2011 Flowplayer Ltd * * Released under the MIT License: * http://www.opensource.org/licenses/mit-license.php */package org.flowplayer.infodialog {    	import org.flowplayer.view.Flowplayer;	import org.flowplayer.model.PlayerEvent;	import org.flowplayer.model.ClipEvent;	import org.flowplayer.model.Clip;	import org.flowplayer.model.PlayerEventType;		import org.flowplayer.ui.buttons.ToggleButtonConfig;	import org.flowplayer.ui.controllers.AbstractToggleButtonController;	import org.flowplayer.ui.buttons.ButtonEvent;	import org.flowplayer.ui.buttons.ToggleButton;		import org.flowplayer.infodialog.InfoView;	import org.flowplayer.infodialog.SkinClasses;	import flash.display.DisplayObjectContainer;		public class ReturnButtonControler extends AbstractToggleButtonController {		        private var _infoDialog:InfoDialog;        		public function ReturnButtonControler(infoDialog:InfoDialog) {            _infoDialog = infoDialog;			super();		}				override public function get name():String {			return "return";		}		override public function get defaults():Object {			return {				visible: true,				enabled: true			};		}				override public function get downName():String {			return "returnExit";		}				override public function get downDefaults():Object {			return {				visible: true,				enabled: true			};		}		override protected function get faceClass():Class {			return SkinClasses.getClass("fp.ScreenCaptureOffButton");		}				override protected function get downFaceClass():Class {			return SkinClasses.getClass("fp.ScreenCaptureOffButton");		}						// TODO : this guy might need to be moved		protected function doEnable(clip:Clip):void {			var shouldEnable:Boolean = clip && (clip.originalWidth > 0 || ! clip.useHWScaling) && _config.config.enabled;			_widget.enabled 	= shouldEnable;		}		override protected function onButtonClicked(event:ButtonEvent):void {            _infoDialog.invoke();		}	}}